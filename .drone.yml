kind: secret
name: id_ed25519
get:
  path: kv/data/ssh
  name: id_ed25519

---

kind: secret
name: tg_token
get:
  path: kv/data/telegram
  name: token

---

kind: secret
name: tg_target
get:
  path: kv/data/telegram
  name: target

---

kind: pipeline
type: docker
name: default

trigger:
  branch:
  - master

steps:
  - name: restore cache
    image: meltwater/drone-cache:dev
    settings:
      backend: "filesystem"
      restore: true
      cache_key: "volume"
      archive_format: "gzip"
      filesystem_cache_root: "/cache"
      mount:
        - 'node_modules'
        - 'img_cache'
    volumes:
      - name: cache
        path: /cache

  - name: hexo deploy
    image: node:17-alpine
    environment:
      SSH_KEY:
        from_secret: id_ed25519
    commands:
      - apk add --no-cache build-base git openssh gzip brotli zstd parallel imagemagick vips-dev python3

      # Set SSH config
      - |
        cat <<EOF >/etc/ssh/ssh_config
        IdentityFile=/etc/ssh/id_ed25519
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null
        VerifyHostKeyDNS yes
        LogLevel ERROR
        EOF
      - echo "$SSH_KEY" > /etc/ssh/id_ed25519
      - chmod 600 /etc/ssh/id_ed25519

      # Generate blog file
      - make
      - node node_modules/hexo/bin/hexo deploy
      # Parallel jobs aren't used for hexo deploy targets, only my own site system
      - sh _scripts/parallel_jobs.sh
    when:
      event:
        exclude:
        - pull_request

  - name: rebuild cache
    image: meltwater/drone-cache:dev
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: "volume"
      archive_format: "gzip"
      filesystem_cache_root: "/cache"
      mount:
        - 'node_modules'
        - 'img_cache'
    volumes:
      - name: cache
        path: /cache

  - name: deploy
    image: alpine:edge
    environment:
      SSH_KEY:
        from_secret: id_ed25519
    commands:
      - apk add --no-cache openssh rsync
      - nslookup -type=txt hosts.lantian.pub | grep -E -o "\"(.*)\"" | tr -d "\"" > target_hosts
      - cat target_hosts

      # Set SSH config
      - |
        cat <<EOF >/etc/ssh/ssh_config
        IdentityFile=/etc/ssh/id_ed25519
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null
        VerifyHostKeyDNS yes
        LogLevel ERROR
        User root
        Port 2222
        EOF
      - echo "$SSH_KEY" > /etc/ssh/id_ed25519
      - chmod 600 /etc/ssh/id_ed25519

      # Run deploy
      - cat target_hosts | xargs -n1 -P10 -I% rsync -azrcP --delete public/ %:/var/www/lantian.pub/
    when:
      event:
        exclude:
        - pull_request

  - name: telegram notification for failure
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_token
      to:
        from_secret: tg_target
    when:
      status:
        - failure

  - name: telegram notification for success
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_token
      to:
        from_secret: tg_target
    when:
      branch:
        - master
      status:
        - success
      event:
        exclude:
          - cron

volumes:
  - name: cache
    host:
      path: /cache
